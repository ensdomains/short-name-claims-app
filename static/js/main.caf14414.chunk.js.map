{"version":3,"sources":["ClaimForm.tsx","DNSProofInfo.tsx","serviceWorker.ts","ClaimsList.tsx","App.tsx","index.tsx","ProviderContext.ts"],"names":["Status","NAME_RE","EMAIL_RE","DNS_URL","dnsQuery","_callee3","qtype","name","q","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context3","prev","next","type","id","Date","now","flags","RECURSION_DESIRED","questions","class","answers","authorities","additionals","getDNS","abrupt","sent","stop","_callee4","query","response","decoded","_context4","fetch","encodePacket","toString","t0","decodePacket","t1","Buffer","arrayBuffer","t2","t3","ClaimForm","props","_this","Object","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleChange","event","target","setState","email","value","status","Initial","handleCheck","doCheck","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__","mark","_callee","result","_context","Loading","state","Loaded","handleClear","_ref2","_callee2","_context2","_x4","apply","arguments","_this2","classes","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_10__","container","spacing","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_11__","autoFocus","label","className","textField","onChange","onKeyPress","ev","key","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","variant","color","button","onClick","disabled","test","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9__","progress","claimer","_DNSProofInfo__WEBPACK_IMPORTED_MODULE_15__","React","Component","withStyles","theme","createStyles","marginLeft","marginRight","width","margin","ADDRESS_TXT_RE","claimTypes","re","method","DNSProofInfo","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","getClaimantAddress","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","rr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","data","match","err","return","fetchClaims","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_this$props","priceOracleAddress","priceOracle","registrationPeriod","claimant","dnsName","claims","ethers","Contract","priceOracleABI","context","provider","REGISTRATION_PERIOD","packet","encode","Promise","all","map","ct","matches","claimed","cost","submitted","claimId","claimInfo","slice","join","bigNumberify","price","computeClaimId","isZero","_x","c","filter","claimName","claim","_this$props2","writeClaimer","tx","shortTxHash","account","connect","getSigner","add","div","hash","message","wait","handleClose","_this$props3","found","rcode","length","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_19__","component","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_20__","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_21__","_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_24___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_22__","primary","secondary","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_12__","utils","formatEther","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_13__","open","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_23__","anchorOrigin","vertical","horizontal","autoHideDuration","action","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_18__","aria-label","contextType","ProviderContext","Boolean","window","location","hostname","ADDRESS_RE","useStyles","makeStyles","root","marginTop","overflowX","table","minWidth","toolbar","paddingLeft","paddingRight","spacer","flex","title","search","defineProperty","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","&:focus","gql","_templateObject","statuses","ClaimsList","exploreUrl","_React$useState","useState","_React$useState2","slicedToArray","skip","setSkip","_React$useState3","_React$useState4","limit","setLimit","_React$useState5","_React$useState6","nextSearch","setNextSearch","_React$useState7","_React$useState8","setAccount","_React$useState9","_React$useState10","setMessage","_React$useState11","_React$useState12","setSearch","searchChanged","e","processTx","_processTx","asyncToGenerator","regenerator_default","debounce","owner","includes","toUpperCase","name_starts_with","react_default","Consumer","then","setClaimStatus","approved","withdrawClaim","Toolbar","Typography","Search_default","InputBase","placeholder","input","react_apollo_esm","variables","loading","CircularProgress","error","Table","TableHead","TableRow","TableCell","TableBody","submittedAt","toLocaleDateString","Link","href","IconButton","Check_default","Close_default","Button","toLowerCase","TableFooter","TablePagination","rowsPerPageOptions","rowsPerPage","page","count","onChangePage","Math","max","onChangeRowsPerPage","parseInt","Snackbar","networks","3","nameClaimAddress","graphql","etherscan","1558996169577","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","getNetwork","network","Container","maxWidth","networkInfo","chainId","Paper","nameClaimsABI","client","ApolloClient","uri","paper","src_ClaimsList","h2","h3","h4","marginBottom","& p","fontSize","lineHeight","& li","ReactDOM","render","Provider","defaultContext","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ProviderInfo","_home_user_Dropbox_projects_short_name_prereg_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_account","accounts","ethereum","enable","providers","Web3Provider","createContext"],"mappings":"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","file":"static/js/main.caf14414.chunk.js","sourcesContent":["/// <reference path=\"dns-packet.d.ts\" />\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { encode as encodePacket, decode as decodePacket, Packet, RECURSION_DESIRED } from 'dns-packet';\n\nimport DNSProofInfo from './DNSProofInfo';\n\nconst NAME_RE = /^([^.]{3,6}\\.[^.]+|[^.]{3,6}eth\\.[^.]+|[^.]{1,4}\\.[^.]{2}|[^.]{1,3}\\.[^.]{3}|[^.]{1,2}\\.[^.]{4}|[^.]{1}\\.[^.]{5})$/;\nconst EMAIL_RE = /^[^@]+@[^.]+\\..+$/;\nconst DNS_URL = 'https://cloudflare-dns.com/dns-query?ct=application/dns-udpwireformat&dns=';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '100%',\n    },\n    button: {\n      margin: theme.spacing(1),\n      width: \"40%\",\n    },\n    progress: {\n      margin: theme.spacing(2),\n    },\n  });\n\nasync function dnsQuery(qtype: string, name: string): Promise<Packet> {\n  let q = {\n    type: 'query',\n    id: Date.now() % 65536,\n    flags: RECURSION_DESIRED,\n    questions: [\n      {\n        type: qtype,\n        class: 'IN',\n        name: name,\n      },\n    ],\n    answers: [],\n    authorities: [],\n    additionals: [],\n  };\n  return await getDNS(q);\n}\n\nasync function getDNS(query: Packet): Promise<Packet> {\n  let response = await fetch(DNS_URL + encodePacket(query).toString('base64'));\n  let decoded = decodePacket(new Buffer(await response.arrayBuffer()));\n  return decoded;\n}\n\nenum Status {\n  Initial = 1,\n  Loading,\n  Loaded\n}\n\ninterface State {\n  status: Status;\n  name: string;\n  email: string;\n  result?: Packet;\n}\n\ninterface Props extends WithStyles<typeof styles> {\n  claimer: ethers.Contract;\n}\n\nclass ClaimForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      status: Status.Initial,\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if(event.target.id === 'email') {\n      this.setState({ email: event.target.value, status: Status.Initial });\n    } else if(event.target.id === 'name') {\n      this.setState({ name: event.target.value, status: Status.Initial });\n    }\n  }\n\n  handleCheck = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    return this.doCheck();\n  }\n\n  doCheck = async () => {\n    this.setState({ status: Status.Loading });\n\n    const result = await dnsQuery(\"TXT\", \"_ens.\" + this.state.name);\n\n    this.setState({\n      status: Status.Loaded,\n      result: result,\n    });\n  }\n\n  handleClear = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    this.setState({\n      status: Status.Initial,\n      name: '',\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { name, email, status, result } = this.state;\n\n    return (\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <TextField\n            autoFocus={true}\n            label=\"DNS domain\"\n            className={classes.textField}\n            value={name}\n            onChange={this.handleChange}\n            id=\"name\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            label=\"Email Address\"\n            className={classes.textField}\n            value={email}\n            onKeyPress={(ev) => (ev.key === 'Enter' && this.doCheck())}\n            onChange={this.handleChange}\n            id=\"email\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={this.handleCheck}\n            disabled={!NAME_RE.test(name) || !EMAIL_RE.test(email)}\n          >Check</Button>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            onClick={this.handleClear}\n          >Clear</Button>\n        </Grid>\n        {status === Status.Loading && <Grid item xs={12}><CircularProgress className={classes.progress} /></Grid>}\n        {status === Status.Loaded && result && this.props.claimer && <DNSProofInfo name={name} email={email} claimer={this.props.claimer} result={result} />}\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ClaimForm);\n","import packet from 'dns-packet';\nimport { ethers } from 'ethers';\nimport { BigNumber, bigNumberify } from 'ethers/utils';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Packet } from 'dns-packet';\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\nimport { abi as priceOracleABI } from '@ensdomains/ethregistrar/build/contracts/PriceOracle.json';\nimport { ProviderContext } from './ProviderContext';\n\nconst ADDRESS_TXT_RE = /^a=(0x[0-9a-fA-F]{40})$/;\n\nconst claimTypes = [\n  {\n    re: /^([^.]{3,6})\\.[^.]+$/,\n    method: \"submitExactClaim\",\n  },\n  {\n    re: /^([^.]{3,6})eth\\.[^.]+$/,\n    method: \"submitPrefixClaim\",\n  },\n  {\n    re: /^([^.]{1,4})\\.([^.]{2})$/,\n    method: \"submitCombinedClaim\",\n  },\n  {\n    re: /^([^.]{1,3})\\.([^.]{3})$/,\n    method: \"submitCombinedClaim\",\n  },\n  {\n    re: /^([^.]{1,2})\\.([^.]{4})$/,\n    method: \"submitCombinedClaim\",\n  },\n  {\n    re: /^([^.])\\.([^.]{5})$/,\n    method: \"submitCombinedClaim\",\n  },\n]\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    progress: {\n      margin: theme.spacing(2),\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  name: string;\n  email: string;\n  claimer: ethers.Contract;\n  result: Packet;\n}\n\ninterface ClaimData {\n  claimed: string;\n  cost: BigNumber;\n  method: string;\n  submitted: boolean;\n}\n\ninterface State {\n  claims?: Array<ClaimData>;\n  message?: string;\n  claim?: ClaimData;\n}\n\nclass DNSProofInfo extends React.Component<Props, State> {\n  static contextType = ProviderContext;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchClaims();\n  }\n\n  getClaimantAddress = () => {\n    for(let rr of this.props.result.answers) {\n      if(rr.type !== 'TXT') continue;\n      for(let data of rr.data) {\n        const match = data.toString().match(ADDRESS_TXT_RE);\n        if(match) {\n          return match[1];\n        }\n      }\n    }\n    return null;\n  }\n\n  fetchClaims = async () => {\n    const { claimer, name, email } = this.props;\n\n    const priceOracleAddress = await claimer.priceOracle();\n    const priceOracle = new ethers.Contract(priceOracleAddress, priceOracleABI, this.context.provider);\n    const registrationPeriod = await claimer.REGISTRATION_PERIOD();\n    const claimant = this.getClaimantAddress();\n    const dnsName = \"0x\" + packet.name.encode(name).toString('hex');\n\n    const claims = (await Promise.all(claimTypes.map(async (ct) => {\n      const matches = name.match(ct.re);\n      if(!matches) return undefined;\n\n      const claimed = matches.slice(1).join('');\n      const cost = bigNumberify(await priceOracle.price(claimed, 0, registrationPeriod));\n\n      let submitted = false;\n      if(claimant) {\n        const claimId = await claimer.computeClaimId(claimed, dnsName, claimant, email);\n        const claimInfo = await claimer.claims(claimId);\n        submitted = !bigNumberify(claimInfo[2]).isZero();\n      }\n\n      return {\n        claimed: claimed,\n        cost: cost,\n        method: ct.method,\n        submitted: submitted,\n      };\n    }))).filter((c) => c !== undefined) as Array<ClaimData>;\n    this.setState({\n      claims: claims,\n    });\n  }\n\n  claimName = (claim?: ClaimData) => async () => {\n    if(claim === undefined) return;\n\n    this.setState({\n      claim: undefined,\n    });\n\n    // Trigger ethereum.enable\n    await this.context.account();\n\n    const { claimer, name, email } = this.props;\n    const writeClaimer = claimer.connect(this.context.provider.getSigner());\n\n    const dnsName = \"0x\" + packet.name.encode(name).toString('hex');\n    const claimant = this.getClaimantAddress();\n    const cost = claim.cost.add(claim.cost.div(10));\n    const tx = await writeClaimer[claim.method](dnsName, claimant, email, {value: cost});\n    const shortTxHash = tx.hash.slice(0, 6) + \"…\" + tx.hash.slice(62);\n    this.setState({\n      message: \"Transaction \" + shortTxHash + \" submitted\",\n    });\n    await tx.wait();\n    this.setState({\n      message: \"Transaction \" + shortTxHash + \" mined!\",\n    });\n    await this.fetchClaims();\n  }\n\n  handleClose = () => {\n    this.setState({\n      message: undefined,\n    });\n  }\n\n  render() {\n    const { name, result, classes } = this.props;\n    const { claims, message, claim } = this.state;\n\n    let found = result.rcode === 'NOERROR' && result.answers.length > 0;\n    let match = false;\n    if(found) {\n      match = this.getClaimantAddress() != null;\n    }\n\n    return (\n      <>\n        <List component=\"ul\">\n          <ListItem>\n            {found\n              ?<ListItemIcon><CheckIcon/></ListItemIcon>\n              :<ListItemIcon><CloseIcon/></ListItemIcon>\n            }\n            <ListItemText primary={\"Text record on _ens.\" + name} secondary={!found?\"You must publish a TXT record on _ens.\" + name + \", in the format 'a=0x...', specifying the address you want to own the ENS name.\":''}/>\n          </ListItem>\n          <ListItem>\n            {match\n              ?<ListItemIcon><CheckIcon/></ListItemIcon>\n              :<ListItemIcon><CloseIcon/></ListItemIcon>\n            }\n            <ListItemText>Text record in correct format (`a=0x...`)</ListItemText>\n          </ListItem>\n          {claims?'':<CircularProgress className={classes.progress} />}\n          {claims && claims.map(claim => (\n            <ListItem key={claim.claimed}>\n              <ListItemIcon>{claim.submitted?<CheckIcon/>:<CloseIcon/>}</ListItemIcon>\n              <ListItemText>\n                Claimed {claim.claimed}.eth for {ethers.utils.formatEther(claim.cost)} ETH\n                {claim.submitted?'':<Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => this.setState({claim: claim})} disabled={!match}>Claim</Button>}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n        <Dialog open={claim !== undefined} onClose={() => this.setState({claim: undefined})} aria-labelledby=\"dialog-title\" aria-describedby=\"dialog-description\">\n          <DialogTitle id=\"dialog-title\">Terms and Conditions</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"dialog-description\">\n              <p>These terms and conditions (“Terms”) constitute a legal agreement between True Names Ltd. (“True Names”, “us”, or “we”) and the entity or person (“you”, “your”, or “user”) who uses these services to apply to reserve an ENS short name under the Ethereum Name System (the “Services”). These Terms describe the terms and conditions that apply to your use of the Services. </p>\n              <p>If you do not understand any of these Terms, please contact us before using the Services. You may not access or use the Services unless you agree to abide by all of the terms and conditions in these Terms.  You warrant that you are at least 18-years-old and you are legally capable of entering into binding contracts. If you are under 18-years-old, you warrant that you have obtained consent from your parent or guardian and they agree to be bound by these Terms on your behalf.</p>\n              <h3>1.\tSOLE AND ABSOLUTE DISCRETION</h3>\n              <p>You acknowledge and understand that the provision/allocation of reserved ENS short names is entirely within our sole and absolute discretion, and that we will make such allocation on any basis that we determine. </p>\n              <p>In the event that your application for a reserved ENS short name is unsuccessful, your sole remedy shall be a refund of any amounts paid by you to us in connection with such application through the Services. </p>\n              <h3>2.\tPROVISION OF INFORMATION</h3>\n              <p>When you use the Services, you must provide us information that is accurate, complete, and current at all times. Failure to do so constitutes a breach of the Terms, which may result in immediate termination of your application.</p>\n              <p>When you use the Services, you may be asked to supply certain personal information relevant to your application including, without limitation, your email addresses and your ETH addresses. BY SUBMITTING THAT INFORMATION, YOU (A) REPRESENT AND WARRANT THAT THE INFORMATION YOU SUPPLY TO US IS TRUE, CORRECT AND COMPLETE, (B) YOU GRANT US THE RIGHT TO PROVIDE YOUR INFORMATION TO THIRD PARTIES FOR PURPOSES OF FACILITATING YOUR APPLICATION, AND (C) YOU CONSENT TO YOUR INFORMATION (INCLUDING EMAIL ADDRESS IN PLAINTEXT) BEING RECORDED ON THE ETHEREUM BLOCKCHAIN. </p>\n              <h3>3.\tINTELLECTUAL PROPERTY</h3>\n              <p>The Ethereum Name System is protected by copyright, trademark, and other laws of both Singapore and foreign countries. Our trademarks and trade dress may not be used in connection with any product or service without the prior written consent of True Names. Nothing in these Terms constitutes a transfer of any intellectual property rights from us to you.</p>\n              <h3>4.\tDISCLAIMER</h3>\n              <p>THE SERVICES AND ALL CONTENT AND MATERIALS INCLUDED ON OR OTHERWISE MADE AVAILABLE TO YOU THROUGH THE SITE ARE PROVIDED BY US ON AN “AS IS” AND “AS AVAILABLE” BASIS, UNLESS OTHERWISE SPECIFIED IN WRITING.</p>\n              <p>WE MAKE NO REPRESENTATION OR WARRANTIES, EXPRESS OR IMPLIED, STATUTORY OR OTHERWISE, REGARDING ANY MATTER, INCLUDING THE MERCHANTABILITY, SUITABILITY, ORIGINALITY, OR FITNESS FOR A PARTICULAR USE OR PURPOSE, NON-INFRINGEMENT OR RESULTS TO BE DERIVED FROM THE USE OF THE SERVICES, OR CONTENT AND MATERIALS INCLUDED ON OR OTHERWISE MADE AVAILABLE TO YOU THROUGH THE SITE, OR THAT THE OPERATION OF ANY SUCH SERVICES OR CONTENT OR MATERIALS WILL BE UNINTERRUPTED OR FREE OF ERROR, VIRUSES OR OTHER HARMFUL COMPONENTS. YOU EXPRESSLY AGREE THAT YOUR USE OF THE SITE IS AT YOUR SOLE RISK.</p>\n              <p>IN NO EVENT SHALL WE BE LIABLE TO YOU FOR SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES, DAMAGES FROM LOSS OF USE, DATA, PROFITS, OR BUSINESS OPPORTUNITIES, OR FAILURE TO ACHIEVE COST SAVINGS, IN CONTRACT, TORT OR OTHERWISE, EVEN IF WE MAY HAVE BEEN ADVISED IN ADVANCE OF THE POSSIBILITY OF SUCH LOSS, COST OR DAMAGES, ARISING OUT OF OR IN CONNECTION WITH THESE TERMS.</p>\n              <h3>5.\tLIMITATION OF LIABILITY</h3>\n              <p>TO THE EXTENT PERMITTED BY LAW AND UNLESS OTHERWISE EXCLUDED IN THE PRECEDING PARAGRAPH, OUR AGGREGATE LIABILITY FOR ANY LOSS OR DAMAGE SUSTAINED BY YOU ARISING OUT OF OR IN CONNECTION WITH DEFAULT UNDER THIS AGREEMENT SHALL BE LIMITED TO THE SUM WE HAVE RECEIVED FROM YOU UNDER THE SERVICES.</p>\n              <h3>6.\tGENERAL </h3>\n              <p>You may not assign your rights under these Terms without our prior written consent. We may assign our rights under these Terms to any third party, or delegate or subcontract the performance of any of our functions under these Terms.</p>\n              <p>These Terms constitute the entire agreement and understanding between you and us and supersedes any prior agreements, arrangements or understandings or communications between the parties with respect to the subject matter hereof.</p>\n              <p>If any provision of these Terms will be deemed illegal, invalid or unenforceable, such impaired provision will not affect the legality, validity and enforceability of the remaining provisions.</p>\n              <p>We may, by notice through this site or by email or any other method of notification, vary any provisions of these Terms. Such variation will take effect on the date as specified through the above means. If you use the site or the Services after such date, you are deemed to have accepted such variation. If you do not accept the variation, you must stop access or using the site and the Services. The version of Terms applicable to any particular order is the latest version in force.</p>\n              <p>Our failure or delay to exercise our rights under these Terms will not constitute a waiver of these Terms.</p>\n              <h3>7.\tGOVERNING LAW</h3>\n              <p>These Terms are governed by and will be construed in accordance with the laws of Singapore and you agree to submit to the exclusive jurisdiction of the courts of Singapore.</p>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.setState({claim: undefined})} color=\"primary\">Reject</Button>\n            <Button onClick={this.claimName(claim)} color=\"primary\" autoFocus>Accept</Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={message !== undefined}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          message={message}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(DNSProofInfo);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ethers } from 'ethers';\nimport { Query, QueryResult } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport debounce from 'lodash/debounce';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\n\nimport { ProviderContext } from './ProviderContext';\n\nconst ADDRESS_RE = /^0x[0-9a-fA-F]{40}$/;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 650,\n    },\n    toolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    spacer: {\n      flex: '1 1 100%',\n    },\n    title: {\n      flex: '0 0 auto',\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n    button: {\n    },\n  }),\n);\n\ninterface Props {\n  claimer: ethers.Contract;\n  exploreUrl: string;\n  title: string;\n}\n\nconst query = gql`\n  query Claims($filter: Claim_filter, $skip: Int, $limit: Int) {\n    claims(first: $limit, skip: $skip, orderBy: name, where: $filter) {\n      id\n      name\n      dnsName\n      email\n      owner\n      status\n      submittedAt\n    }\n  }\n`;\n\nconst statuses = ['PENDING', 'APPROVED', 'DECLINED', 'WITHDRAWN'];\n\ninterface Claims_filter {\n  name_starts_with?: string;\n  owner?: string;\n  status?: string;\n}\n\ninterface Claim {\n  id: string;\n  name: string;\n  dnsName: string;\n  email: string;\n  owner: string;\n  status: string;\n  submittedAt: number;\n}\n\nexport const ClaimsList: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const { exploreUrl, title, claimer } = props;\n\n  const [ skip, setSkip ] = React.useState(0);\n  const [ limit, setLimit ] = React.useState(5);\n  const [ nextSearch, setNextSearch ] = React.useState('');\n  let [ account, setAccount ] = React.useState(undefined as string|null|undefined);\n  let [ message, setMessage ] = React.useState(undefined as string|undefined);\n  let [ search, setSearch ] = React.useState('');\n  setSearch = debounce(setSearch, 500);\n\n  function searchChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    setNextSearch(e.target.value);\n    setSearch(e.target.value);\n  }\n\n  async function processTx(tx: ethers.providers.TransactionResponse) {\n    if(!tx.hash) return;\n    const shortTxHash = tx.hash.slice(0, 6) + \"…\" + tx.hash.slice(62);\n    setMessage(\"Transaction \" + shortTxHash + \" submitted\");\n    await tx.wait();\n    setMessage(\"Transaction \" + shortTxHash + \" confirmed!\");\n  }\n\n  let filter: Claims_filter = {};\n  if(ADDRESS_RE.test(search)) {\n    filter.owner = search;\n  } else if(statuses.includes(search.toUpperCase())) {\n    filter.status = search.toUpperCase();\n  } else {\n    filter.name_starts_with = search;\n  }\n\n  return <ProviderContext.Consumer>{(context) => {\n    if(account === undefined) {\n      context.account().then(setAccount);\n    }\n\n    let setClaimStatus = (claim: Claim, approved: boolean) => async () => {\n      const writeClaimer = claimer.connect(context.provider.getSigner());\n      const tx = await writeClaimer.setClaimStatus(claim.id, approved);\n      processTx(tx);\n    }\n\n    let withdrawClaim = (claim: Claim) => async () => {\n      const writeClaimer = claimer.connect(context.provider.getSigner());\n      const tx = await writeClaimer.withdrawClaim(claim.id);\n      processTx(tx);\n    }\n\n    return <>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.title}>{title}</Typography>\n        <div className={classes.spacer} />\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            onChange={searchChanged}\n            value={nextSearch}\n          />\n        </div>\n      </Toolbar>\n      <Query query={query} variables={{ filter: filter, limit, skip: skip }}>\n        {(result:QueryResult) => {\n          if(result.loading) return <CircularProgress />;\n          if(result.error) return <div>Error loading list of claims.</div>;\n\n          return <>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>DNS Domain</TableCell>\n                  <TableCell>Submitted</TableCell>\n                  <TableCell>Account</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {result.data.claims.map((claim:Claim) => (\n                  <TableRow key={claim.name + \":\" + claim.dnsName + \":\" + claim.owner + \":\" + claim.email}>\n                    <TableCell>{claim.name}.eth</TableCell>\n                    <TableCell>{claim.dnsName}</TableCell>\n                    <TableCell title={\"Submitted by \" + claim.email}>{new Date(claim.submittedAt * 1000).toLocaleDateString()}</TableCell>\n                    <TableCell><Link href={exploreUrl + claim.owner}>{claim.owner.slice(0, 6) + '…' + claim.owner.slice(38)}</Link></TableCell>\n                    <TableCell>{claim.status}</TableCell>\n                    <TableCell>\n                      {window.location.search==='?owner'?<>\n                        <IconButton color=\"primary\" className={classes.button} onClick={setClaimStatus(claim, true)}><CheckIcon/></IconButton>\n                        <IconButton color=\"secondary\" className={classes.button} onClick={setClaimStatus(claim, false)}><CloseIcon/></IconButton>\n                      </>:<>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} disabled={!account || claim.owner.toLowerCase() !== account.toLowerCase() || claim.status === 'WITHDRAWN'} onClick={withdrawClaim(claim)}>Cancel</Button>\n                      </>}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, 50]}\n                  rowsPerPage={limit}\n                  page={skip / limit}\n                  count={result.data.claims.length===limit ? skip+limit+1 : skip+result.data.claims.length}\n                  onChangePage={(e: any, page: number) => setSkip(Math.max(limit * page, 0))}\n                  onChangeRowsPerPage={(e: React.ChangeEvent<HTMLInputElement>) => setLimit(parseInt(e.target.value))}\n                />\n              </TableFooter>\n            </Table>\n          </>\n        }}\n      </Query>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={message !== undefined}\n        autoHideDuration={6000}\n        onClose={() => setMessage(undefined)}\n        message={message}\n        action={[\n          <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={() => setMessage(undefined)}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>}}\n  </ProviderContext.Consumer>\n}\n\nexport default ClaimsList;\n","import ApolloClient from 'apollo-boost';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { ApolloProvider } from 'react-apollo';\nimport { abi as nameClaimsABI } from '@ensdomains/ethregistrar/build/contracts/ShortNameClaims.json';\n\nimport ClaimForm from './ClaimForm';\nimport ClaimsList from './ClaimsList';\nimport './App.css';\nimport { ProviderContext } from './ProviderContext';\n\nconst networks : {[key: string]: {nameClaimAddress: string, graphql?: string, etherscan: string}} = {\n  3: { // Ropsten\n    nameClaimAddress: '0x178dc714ac0121577d025a0cf4dcd396f4f08ec3',\n    graphql: 'https://api.thegraph.com/subgraphs/name/ensdomains/shortnameclaims',\n    etherscan: 'https://ropsten.etherscan.io/address/',\n  },\n  1558996169577: {\n    nameClaimAddress: '0xe982E462b094850F12AF94d21D470e21bE9D0E9C',\n    etherscan: '',\n  },\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n    },\n    paper: {\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(3),\n      '& p': {\n        fontSize: '14pt',\n        lineHeight: '1.5em',\n      },\n      '& li': {\n        fontSize: '14pt',\n        lineHeight: '1.5em',\n      },\n    },\n    h2: {\n      marginTop: 0,\n    },\n    h3: {\n      marginTop: 0,\n    },\n    h4: {\n      marginTop: 0,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  network?: ethers.utils.Network;\n}\n\nclass App extends React.Component<Props, State> {\n  static contextType = ProviderContext;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {}\n  }\n\n  async componentDidMount() {\n    this.setState({\n      network: await this.context.provider.getNetwork(),\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { network } = this.state;\n    if(!network) {\n      return (\n        <Container maxWidth=\"md\">\n          <h1>ENS Short Name Claim Tool</h1>\n          <CircularProgress />\n        </Container>\n      );\n    }\n\n    const networkInfo = network?networks[network.chainId]:null;\n    if(!networkInfo) {\n      return (\n        <Container maxWidth=\"md\">\n          <h1>ENS Short Name Claim Tool</h1>\n          <Paper>\n            <Typography variant=\"h2\" component=\"h1\">Network Not Supported</Typography>\n            <Typography variant=\"body1\">\n              The network your browser is connected to is not supported. Please\n              connect to a supported network.\n            </Typography>\n          </Paper>\n        </Container>\n      );\n    }\n\n    const claimer = new ethers.Contract(networkInfo.nameClaimAddress, nameClaimsABI, this.context.provider);\n\n    const client = networkInfo.graphql?new ApolloClient({uri: networkInfo.graphql}):null;\n\n    return (\n      <Container maxWidth=\"md\" className={classes.root}>\n        <h1>ENS Short Name Claim Tool</h1>\n\n        {client && <ApolloProvider client={client}>\n          <Paper className={classes.paper}>\n            <ClaimsList title=\"All Claims\" claimer={claimer} exploreUrl={networkInfo.etherscan} />\n          </Paper>\n        </ApolloProvider>}\n\n        <Paper className={classes.paper}>\n          <h2 className={classes.h2}>Submit a claim</h2>\n          <ClaimForm claimer={claimer} />\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <h2 className={classes.h2}>About</h2>\n          <p>ENS is making names shorter than 7 characters available for registration in the near future. Before they become generally available for registration, there will be a preregistration period, followed by an auction. Once both the preregistration and auction are completed, remaining names will be available for general registration.</p>\n          <h3 className={classes.h3}>The Short Name Reservation Process</h3>\n          <p>A reservation process will be used during preregistration period. The basic premise behind using the reservation process is that ENS is more useful the less surprising it is.</p>\n          <p>To a large part, being less surprising means that known projects in the crypto space can get the name that best represents them. Furthermore, the likelihood of projects adopting ENS is proportional to how well they can represent themselves with it.</p>\n          <p>We hope the reservation process furthers this goal of meaningful representation, while increasing ENS adoption. </p>\n          <p>After much discussion and debate, the ENS team feels that implementing the following process will be the most effective way to achieve these goals. </p>\n          <p>(The topic’s been under discussion for some time. You can find related discussions <a href=\"https://discuss.ens.domains/tags/reservation-process\">here</a>.)</p>\n          <p>Any DNS domain owner may apply to reserve a short (3-6 character) ENS name ahead of the auction process.</p>\n          <h3 className={classes.h3}>How It Works</h3>\n          <p>Public applications must reference an existing DNS domain name, and specify the ENS domain they wish to claim. The DNS domain must have been registered prior to May 4, 2019.</p>\n          <p>Applications may be submitted using this application. Note that application information, including your email address, is visible onchain in plain-text. If you are concerned about this, we recommend using a temporary email address.</p>\n          <h4 className={classes.h4}>Reservation requests must be received during the reservation process window</h4>\n          <p>The reservation process window opens at 00:00UTC 4 July 2019 and closes at 00:00 UTC 4 August 2019.</p>\n          <h4 className={classes.h4}>Criteria to Quality for ENS Name Reservation</h4>\n          <p>To qualify, the domain being used to support the claim must meet the following criteria:</p>\n          <ul>\n            <li>Must be a DNS second-level domain (2LD)</li>\n            <li>Must have been registered on or before May 4, 2019</li>\n          </ul>\n          <p>And the ENS name being claimed must be one of:</p>\n          <ul>\n            <li>An exact match for the existing DNS domain (eg, foo.com -> foo.eth)</li>\n            <li>The DNS domain with the suffix 'eth' removed (eg, asseth.fr -> ass.eth)</li>\n            <li>The concatenation of domain and TLD (eg, foo.com -> foocom.eth)</li>\n          </ul>\n          <p>Domains being claimed must be 3-6 characters long</p>\n          <p>Each application must be accompanied by the fee for a year's registration ($5 in ETH for a 5-6 character name, $160 in ETH for a 4 character name, and $640 in ETH for a 3 character name). </p>\n          <p>Before the public application is submitted, the owner of the DNS domain must create a TXT record on a specific subdomain with a predetermined value to demonstrate their ownership of the DNS domain, to validate the claim. This record must remain in place at least until the claim is approved, declined, or withdrawn.</p>\n          <p>If an application is successful, the claimant is issued the name with 365 days' registration period (this can be extended as desired). If an application is unsuccessful, the fee will be returned to the claimant.</p>\n          <h4 className={classes.h4}>The ENS team will review each submission for validity.</h4>\n          <p>Because this is a subjective process, we’re inclined to set quite a low bar to prove validity. For example, if the submitted DNS domain is only a domain parking page, we’ll reject the request.</p>\n          <p>If the submitted DNS domain has any kind of web presence, and we can find anyone talking about it as a real project, we’ll probably approve the request.</p>\n          <p>Our goal is to exclude low effort attempts to claim a name that’s not actually being used for anything.</p>\n          <h4 className={classes.h4}>The submission that can demonstrate its been operating the longest wins.</h4>\n          <p>If multiple valid claims are received for the same ENS domain, the project that can demonstrate it’s been operating the longest among the claimants, will be awarded the ENS name.</p>\n          <p>All claims are decided based on the sole discretion of the ENS team. Decisions are final.</p>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {ProviderContext, defaultContext} from './ProviderContext';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <ProviderContext.Provider value={defaultContext}>\n    <App />\n  </ProviderContext.Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ethers } from 'ethers';\nimport React from 'react';\n\ninterface Ethereum extends ethers.providers.AsyncSendable {\n  enable: () => Promise<string|null|undefined>;\n}\n\ndeclare var ethereum: Ethereum;\n\nexport class ProviderInfo {\n  provider: ethers.providers.JsonRpcProvider;\n\n  constructor(provider: ethers.providers.JsonRpcProvider) {\n    this.provider = provider;\n  }\n\n  async account() {\n    const accounts = await ethereum.enable();\n    if(accounts === undefined || accounts === null) {\n      return null;\n    }\n    return accounts[0];\n  }\n}\n\nexport const defaultContext = new ProviderInfo(new ethers.providers.Web3Provider(ethereum));\n\nexport const ProviderContext = React.createContext(defaultContext);\n"],"sourceRoot":""}